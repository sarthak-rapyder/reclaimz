AWSTemplateFormatVersion: "2010-09-09"

Description: This stack deploys a Public Loadbalancer for ECS.

Parameters:

  ProjectName:
    Description: The Project name here.
    Type: String
    Default: ""

  Environment:
    Description: The Environment name here.
    Type: String
    Default: ""

  VpcID:
    Description: The VPC ID here.
    Type: String
  
  PublicSubnet1ID:
    Description: The Public Subnet ID-1 in AZ 1a here.
    Type: String
    
  PublicSubnet2ID:
    Description: The Public Subnet ID-2 in AZ 1b here.
    Type: String

Resources:
  # A public facing load balancer, this is used for accepting traffic from the public
  # internet and directing it to public facing microservices
  PublicLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      GroupName: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb-sg" ] ]
      VpcId: !Ref VpcID
      SecurityGroupIngress:
        # Allow access to ALB from anywhere on the internet
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80         
      # SecurityGroupEgress:
      #   # Allow access all traffic from VPC to the internet
      #   - CidrIp: 0.0.0.0/0
      #     IpProtocol: "-1"

  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    # DependsOn: GatewayAttachement
    Properties:
      Scheme: internet-facing
      Name: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb" ] ]
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets:
        # The load balancer is placed into the public subnets, so that traffic
        # from the internet can reach the load balancer directly via the internet gateway
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      SecurityGroups:
        - !Ref PublicLoadBalancerSG

  # A Target group is used to setup the ALB to just drop traffic
  TargetGroupPublic:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "tg" ] ]
      TargetType: ip
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcID

  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroupPublic
          Type: forward
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 80
      Protocol: HTTP

# These are the values output by the CloudFormation template. Be careful
# about changing any of them, because of them are exported with specific
# names so that the other task related CF templates can use them.
Outputs:
  ExternalUrl:
    Description: The url of the external load balancer
    Value: !Join
      - ""
      - - http://
        - !GetAtt PublicLoadBalancer.DNSName
    Export:
      Name: !Join
        - ':'
        - - !Ref AWS::StackName
          - ExternalUrl

  PublicListener:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref PublicLoadBalancerListener
    Export:
      Name: !Join
        - ':'
        - - !Ref AWS::StackName
          - PublicListener

  MyPublicLoadBalancerSGId:
    Value: !Ref PublicLoadBalancerSG
    Export:
      Name: PublicLoadBalancerSGId           

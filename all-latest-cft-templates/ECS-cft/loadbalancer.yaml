AWSTemplateFormatVersion: "2010-09-09"
Description: This stack creates an Application Loadbalancer, Target Group for ECS.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: 'Project Name and Environment'
        Parameters:
          - ProjectName
          - Environment
          - TenantType
      - Label:
          default: 'ALB Parameters'
        Parameters:
          - VpcID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - ACMCertificateARN

Parameters:
  ProjectName:
    Description: Name of the Project (ex- rczf, rczh)
    Type: String  
  Environment:
    Description: Environment (ex- dev, staging, qa, prod)
    Type: String  
  TenantType:
    Description: Tenant Type of the project (ex- finance, health)
    Type: String
  VpcID:
    Description: Enter The VPC ID.
    Type: String  
  PublicSubnet1ID:
    Description: The Public Subnet ID-1.
    Type: String    
  PublicSubnet2ID:
    Description: The Public Subnet ID-2.
    Type: String
  ACMCertificateARN:  
    Description: Enter the ACM Certificate ARN for Load Balancer, 443 Listener.
    Type: String

Resources:
# A public facing load balancer, this is used for accepting traffic from the public internet and directing it to public facing microservices
  PublicLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      GroupName: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb-sg" ] ]
      VpcId: !Ref VpcID
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443      
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb-sg" ] ]
        - Key: Environment
          Value: !Ref Environment
        - Key: TenantType  
          Value: !Ref TenantType
        - Key: Project
          Value: !Ref ProjectName           
  
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Name: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb" ] ]
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "30"
      Subnets:
# The load balancer is placed into the public subnets, so that traffic from the internet can reach the load balancer directly via the internet gateway
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      SecurityGroups:
        - !Ref PublicLoadBalancerSG
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb" ] ]
        - Key: Environment
          Value: !Ref Environment
        - Key: TenantType  
          Value: !Ref TenantType
        - Key: Project
          Value: !Ref ProjectName         

# A Target group is used to setup the ALB to just drop traffic
  TargetGroupPublic:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /actuator/health
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Name: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "gateway-tg" ] ]
      TargetType: ip
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcID
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "tg" ] ]
        - Key: Environment
          Value: !Ref Environment
        - Key: TenantType  
          Value: !Ref TenantType
        - Key: Project
          Value: !Ref ProjectName       

  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates: 
        - CertificateArn: !Ref ACMCertificateARN
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroupPublic
          Type: forward
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 443
      Protocol: HTTPS

Outputs:
  ExternalUrl:
    Description: The url of the external load balancer
    Value: !Join
      - ""
      - - http://
        - !GetAtt PublicLoadBalancer.DNSName
    Export:
      Name: !Join
        - ':'
        - - !Ref AWS::StackName
          - ExternalUrl

  PublicListener:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref PublicLoadBalancerListener
    Export:
      Name: !Join
        - ':'
        - - !Ref AWS::StackName
          - PublicListener

  MyPublicLoadBalancerSGId:
    Value: !Ref PublicLoadBalancerSG
    Export:
      Name: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "alb-sg-Id" ] ]         

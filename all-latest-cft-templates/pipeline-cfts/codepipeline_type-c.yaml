AWSTemplateFormatVersion: '2010-09-09'

Description: Deploys CodePipeline with Source and Codebuild.

Parameters:

  Environment:
    Description: Type the environment Name.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z]*$
    Default: qa

  ApplicationName:
    Description: Type the application Name.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: default

  S3BucketName:
    Description: Type the S3 BucketName for storing UI artifacts.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: default-codepipeline-artifact-bucket

  VpcId:
    Description: Type the VPC ID.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^vpc-[0-9a-f]{8,17}$

  PrivateSubnet1:
    Description: Type the PrivateSubnet1 ID in AZ-1a for CodeBuild.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^subnet-[0-9a-f]{8,17}$

  PrivateSubnet2:
    Description: Type the PrivateSubnet2 ID in AZ-1b for CodeBuild.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^subnet-[0-9a-f]{8,17}$

  CodestarConnectionArn:
    Description: Enter the foll ARN of the codestar connection for the Source.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^arn:aws:[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:[0-9]*:[a-zA-Z0-9-:/]*$

  FullRepositoryId:
    Description: Type the FullName of Repository for the CI Source.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z0-9-_/]*$

  BranchName:
    Description: Type the BranchName for the CI Source.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z0-9-_/]*$

Resources:

  S3BucketForCodePipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${S3BucketName}
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join [ "-", [ !Ref Environment, !Ref ApplicationName, "codebuild-role"] ]
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Join [ "-", [ !Ref Environment, !Ref ApplicationName, "codebuild-base-policy"] ]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - logs:CreateLogGroup
                  - logs:Createlogstream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}/*
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Resource:
                  - arn:aws:s3:::*
                  - arn:aws:s3:::*/*
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - codeartifact:*
        - PolicyName: !Sub ${Environment}-${ApplicationName}-codebuild-vpc-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*
                Action:
                  - ec2:CreateNetworkInterfacePermission
                Condition:
                  StringEquals:
                    ec2:Subnet:
                      - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet1}
                      - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet2}
                    ec2:AuthorizedService: codebuild.amazonaws.com
        - PolicyName: !Sub ${Environment}-${ApplicationName}-ssm-parameterstore-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ssm:DescribeParameters
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
                Action:
                  - ssm:GetParameters

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join [ "-", [ !Ref Environment, !Ref ApplicationName, "codepipeline-role"] ]
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${Environment}-${ApplicationName}-codepipeline-base-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
                Effect: Allow
              - Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codecommit:CancelUploadArchive
                Resource: '*'
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
                Effect: Allow
              - Action:
                  - iam:PassRole
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: '*'
                Effect: Allow
              - Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: '*'
                Effect: Allow
              - Action:
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifacts
                  - servicecatalog:DescribeProvisioningArtifacts
                  - servicecatalog:DeleteProvisioningArtifacts
                  - servicecatalog:UpdateProduct
                Resource: '*'
                Effect: Allow
              - Action:
                  - ecr:DescribeImages
                Resource: '*'
                Effect: Allow
              - Action:
                  - codestar-connections:UseConnection
                Resource: '*'
                Effect: Allow
        - PolicyName: !Sub ${Environment}-${ApplicationName}-ssm-parameterstore-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - '*'
                Action:
                  - ssm:DescribeParameters
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
                Action:
                  - ssm:GetParameters

  CodeBuildSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      GroupName: !Join [ "-", [ !Ref Environment, !Ref ApplicationName, "sg" ] ]
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        # Allow access all traffic from VPC to the internet
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ "-", [ !Ref Environment, !Ref ApplicationName ] ]
      Source:
        Type: CODEPIPELINE
        GitCloneDepth: 1
        BuildSpec: buildspec.yml
      Environment:
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:7.0
        ComputeType: BUILD_GENERAL1_LARGE
        EnvironmentVariables:
          - Name: CODEARTIFACT_DOMAIN
            Type: PLAINTEXT
            Value: artifactory
          - Name: CODEARTIFACT_REPOSITORY
            Type: PLAINTEXT
            Value: release
          - Name: SOURCE_AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: 767397957166
          - Name: service_name
            Type: PLAINTEXT
            Value: !Ref ApplicationName
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: qa
          - Name: DEPLOY_S3BUCKETNAME
            Type: PLAINTEXT
            Value: !Join [ "-", [ !Ref Environment, !Ref ApplicationName, "reclaimz"] ]
      ServiceRole: !Ref CodeBuildServiceRole
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
        SecurityGroupIds:
          - !Ref CodeBuildSG
      Artifacts:
        Type: CODEPIPELINE
      # LogsConfig:
      #   CloudWatchlogs:
      #     Status: ENABLED
      #     # GroupName: !Join [ "-", [ !Ref Environment, !Ref ApplicationName, "codebuild-project-logs" ] ]

  CodePipelineProject:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: S3BucketForCodePipeline
    Properties:
      Name: !Join [ "-", [ !Ref Environment, !Ref ApplicationName ] ]
      PipelineType: V2
      ExecutionMode: QUEUED
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                BranchName: !Ref BranchName
                ConnectionArn: !Ref CodestarConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: SourceArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 2
      ArtifactStore:
        Location: !Ref S3BucketName
        Type: S3
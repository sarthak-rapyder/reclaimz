AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template to create RDS subnet group, RDS security group and RDS instance (Dependency : Network/VPC stack)'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: 'Project Name and Environment'
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: 'RDS Parameters'
        Parameters:
          - DBName
          - DBUser
          - DBPassword
          - DBAllocatedStorage
          - DBInstanceClass
          - DBEngine
          - DBEngineVersion
          - MultiAZ
          - DBBackupRetentionPeriod

Parameters:
  ProjectName:
    Description: Name of the Project
    Type: String  
  Environment:
    Description: Environment (dev, staging, prod)
    Type: String 
  DBName:
    Description: The database name (must begin with a letter and contain only alphanumeric characters)
    Type: String
    Default: MyDatabase
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Description: The database admin account username (must begin with a letter and contain only alphanumeric characters (ex; postgres))
    Type: String
    Default: postgres
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters (ex; postgres).
  DBPassword:
    Description: The database admin account password (must contain only alphanumeric characters [a-zA-Z][a-zA-Z0-9#$-_?]*)
    Type: String
    NoEcho: true  # Hides password input during parameter selection
    MinLength: 1
    MaxLength: 41
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9#$-_?]*"
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Description: The size of the database (Gb) (must be between 20 and 1024Gb.)
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 1024
    ConstraintDescription: must be between 20 and 1024Gb.
  DBInstanceClass:
    Description: The database instance type (ex; db.t3.micro, db.t4g.medium)
    Type: String
    Default: db.t3.micro
    ConstraintDescription: must select a valid database instance type (ex; db.t3.micro, db.t4g.medium).
  DBEngine:
    Description: The database engine type (ex; postgres)
    Type: String
    Default: postgres
    ConstraintDescription: must select a valid database engine (ex; postgres)
  DBEngineVersion:
    Description: The database engine version
    Type: String
    ConstraintDescription: must select a valid database engine version  
  MultiAZ:
    Description: Enable Multi-AZ (true or false)
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be true or false.
  DBBackupRetentionPeriod:
    Description: The number of days for which automated backups are retained.
    Type: Number
    Default: 7
    MinValue: 0
    MaxValue: 35
    ConstraintDescription: Must be a value from 0 to 35.
  DBPreferredBackupWindow: 
    Description: Must be in the format hh24:mi-hh24:mi, UTC, must not conflict with the preferred maintenance window, must be at least 30 minutes.
    Type: String 
    Default: 08:20-08:50
    ConstraintDescription: Must be in the format hh24:mi-hh24:mi UTC.

Resources:
  MySubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "subnet-group" ] ]
      DBSubnetGroupDescription: my-db-subnet-group
      SubnetIds:
        - Fn::ImportValue:
            !Sub '${ProjectName}-${Environment}-DBSubnet1Id'
        - Fn::ImportValue:
            !Sub '${ProjectName}-${Environment}-DBSubnet2Id'
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "subnet-group" ] ]
        - Key: Env
          Value: !Ref Environment  
      
  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "db" ] ]
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: !Ref DBEngine
      EngineVersion: !Ref DBEngineVersion
      MultiAZ: !Ref MultiAZ
      AvailabilityZone: us-east-2a
      StorageType: gp3
      StorageEncrypted: true
      KmsKeyId: 
        Fn::ImportValue:
          !Sub '${ProjectName}-${Environment}-kms-key-Id'
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      PreferredBackupWindow: !Ref DBPreferredBackupWindow
      DBSubnetGroupName: !Ref MySubnetGroup
      VPCSecurityGroups:
        - !Ref MyDBSecurityGroup
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "db" ] ]
        - Key: Env
          Value: !Ref Environment        

  MyDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "db-sg" ] ]
      GroupDescription: Allows access to the database.
      VpcId:
        Fn::ImportValue:
          !Sub '${ProjectName}-${Environment}-VPCId'
  #     SecurityGroupIngress:
  #       - IpProtocol: tcp
  #         FromPort: 3306
  #         ToPort: 3306
  #         SourceSecurityGroupId: !ImportValue MyInstanceSecurityGroupId
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "db-sg" ] ]
        - Key: Env
          Value: !Ref Environment

Outputs:
  DBEndpoint:
    Description: "Endpoint address of the RDS database"
    Value: !GetAtt MyDBInstance.Endpoint.Address
    Export:
      Name: !Join [ "-", [ !Ref ProjectName, !Ref Environment, "db-endpoint" ] ]